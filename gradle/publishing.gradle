import java.nio.file.Files

ext /* -ra properties */ {
    Properties properties = new Properties()
    properties.load(new FileInputStream(file("gradle/publishing.properties")))
    properties.forEach((k, v) -> set(k, v))

    version_valid = versionValidForPublishing(version)
    published_version_name = version_valid ? makeName(version) : "INVALID"
    changelog_text = getChangelog(file(changelog_file))
}

task publishMod {
    doFirst {
        if (!version_valid)
            throw new IllegalStateException("Verson is not valid for publishing")
    }
    dependsOn(modrinth)
//    dependsOn(curseforge)
}

static String makeName(String version) {
    // version example: 0.5.0.h-861+1.18.2
    String createVersion = version.split("-")[0]
    String build = version.split("-")[1].split("\\+")[0]
    String mcVer = version.split("\\+")[1]
    return "Create %s build %s for %s".formatted(createVersion, build, mcVer)
}

static boolean versionValidForPublishing(String version) {
    return version.contains("-") && version.contains("+")
}

static String getChangelog(File changelogFile) {
    String text = Files.readString(changelogFile.toPath())
    String[] split = text.split("----------")
    if (split.length != 2)
        throw new IllegalStateException("Malformed changelog")
    return split[1].trim()
}

apply from: "gradle/publishing/modrinth.gradle"
apply from: "gradle/publishing/maven.gradle"
